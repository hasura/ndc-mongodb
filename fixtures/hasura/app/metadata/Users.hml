---
kind: ObjectType
version: v1
definition:
  name: Users
  fields:
    - name: id
      type: ObjectId!
    - name: email
      type: String!
    - name: name
      type: String!
    - name: password
      type: String!
    - name: preferences
      type: UsersPreferences
  graphql:
    typeName: Users
    inputTypeName: UsersInput
  dataConnectorTypeMapping:
    - dataConnectorName: sample_mflix
      dataConnectorObjectType: users
      fieldMapping:
        id:
          column:
            name: _id
        email:
          column:
            name: email
        name:
          column:
            name: name
        password:
          column:
            name: password
        preferences:
          column:
            name: preferences

---
kind: TypePermissions
version: v1
definition:
  typeName: Users
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - email
          - name
          - password
          - preferences
    - role: user
      output:
        allowedFields:
          - id
          - email
          - name

---
kind: BooleanExpressionType
version: v1
definition:
  name: UsersBoolExp
  operand:
    object:
      type: Users
      comparableFields:
        - fieldName: id
          booleanExpressionType: ObjectIdBoolExp
        - fieldName: email
          booleanExpressionType: StringBoolExp
        - fieldName: name
          booleanExpressionType: StringBoolExp
        - fieldName: password
          booleanExpressionType: StringBoolExp
        - fieldName: preferences
          booleanExpressionType: UsersPreferencesBoolExp
      comparableRelationships:
        - relationshipName: comments
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: UsersBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: UsersAggExp
  operand:
    object:
      aggregatedType: Users
      aggregatableFields:
        - fieldName: id
          aggregateExpression: ObjectIdAggExp
        - fieldName: email
          aggregateExpression: StringAggExp
        - fieldName: name
          aggregateExpression: StringAggExp
        - fieldName: password
          aggregateExpression: StringAggExp
  count:
    enable: true
  graphql:
    selectTypeName: UsersAggExp

---
kind: Model
version: v1
definition:
  name: Users
  objectType: Users
  source:
    dataConnectorName: sample_mflix
    collection: users
  filterExpressionType: UsersBoolExp
  aggregateExpression: UsersAggExp
  orderableFields:
    - fieldName: id
      orderByDirections:
        enableAll: true
    - fieldName: email
      orderByDirections:
        enableAll: true
    - fieldName: name
      orderByDirections:
        enableAll: true
    - fieldName: password
      orderByDirections:
        enableAll: true
    - fieldName: preferences
      orderByDirections:
        enableAll: true
  graphql:
    selectMany:
      queryRootField: users
      subscription:
        rootField: users
    selectUniques:
      - queryRootField: usersById
        uniqueIdentifier:
          - id
        subscription:
          rootField: usersById
    orderByExpressionType: UsersOrderBy
    filterInputTypeName: UsersFilterInput
    aggregate:
      queryRootField: usersAggregate
      subscription:
        rootField: usersAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: Users
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true
    - role: user
      select:
        filter:
          fieldComparison:
            field: id
            operator: _eq
            value:
              sessionVariable: x-hasura-user-id

---
kind: ObjectType
version: v1
definition:
  name: UsersPreferences
  fields: []
  graphql:
    typeName: UsersPreferences
    inputTypeName: UsersPreferencesInput
  dataConnectorTypeMapping:
    - dataConnectorName: sample_mflix
      dataConnectorObjectType: users_preferences

---
kind: TypePermissions
version: v1
definition:
  typeName: UsersPreferences
  permissions:
    - role: admin
      output:
        allowedFields: []

---
kind: BooleanExpressionType
version: v1
definition:
  name: UsersPreferencesBoolExp
  operand:
    object:
      type: UsersPreferences
      comparableFields: []
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: UsersPreferencesBoolExp

