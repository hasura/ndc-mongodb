---
kind: ObjectType
version: v1
definition:
  name: MoviesAwards
  fields:
    - name: nominations
      type: Int!
    - name: text
      type: String!
    - name: wins
      type: Int!
  graphql:
    typeName: MoviesAwards
    inputTypeName: MoviesAwardsInput
  dataConnectorTypeMapping:
    - dataConnectorName: sample_mflix
      dataConnectorObjectType: movies_awards

---
kind: TypePermissions
version: v1
definition:
  typeName: MoviesAwards
  permissions:
    - role: admin
      output:
        allowedFields:
          - nominations
          - text
          - wins

---
kind: BooleanExpressionType
version: v1
definition:
  name: MoviesAwardsComparisonExp
  operand:
    object:
      type: MoviesAwards
      comparableFields:
        - fieldName: nominations
          booleanExpressionType: IntComparisonExp
        - fieldName: text
          booleanExpressionType: StringComparisonExp
        - fieldName: wins
          booleanExpressionType: IntComparisonExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: MoviesAwardsComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: MoviesAwardsAggregateExp
  operand:
    object:
      aggregatedType: MoviesAwards
      aggregatableFields:
        - fieldName: nominations
          aggregateExpression: IntAggregateExp
        - fieldName: wins
          aggregateExpression: IntAggregateExp
  count: { enable: true }
  graphql:
    selectTypeName: MoviesAwardsAggregateExp

---
kind: ObjectType
version: v1
definition:
  name: MoviesImdb
  fields:
    - name: id
      type: Int!
    - name: rating
      type: Float!
    - name: votes
      type: Int!
  graphql:
    typeName: MoviesImdb
    inputTypeName: MoviesImdbInput
  dataConnectorTypeMapping:
    - dataConnectorName: sample_mflix
      dataConnectorObjectType: movies_imdb

---
kind: TypePermissions
version: v1
definition:
  typeName: MoviesImdb
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - rating
          - votes

---
kind: BooleanExpressionType
version: v1
definition:
  name: MoviesImdbComparisonExp
  operand:
    object:
      type: MoviesImdb
      comparableFields:
        - fieldName: id
          booleanExpressionType: IntComparisonExp
        - fieldName: rating
          booleanExpressionType: FloatComparisonExp
        - fieldName: votes
          booleanExpressionType: IntComparisonExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: MoviesImdbComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: MoviesImdbAggregateExp
  operand:
    object:
      aggregatedType: MoviesImdb
      aggregatableFields:
        - fieldName: rating
          aggregateExpression: FloatAggregateExp
        - fieldName: votes
          aggregateExpression: IntAggregateExp
  count: { enable: true }
  graphql:
    selectTypeName: MoviesImdbAggregateExp

---
kind: ObjectType
version: v1
definition:
  name: MoviesTomatoesCritic
  fields:
    - name: meter
      type: Int!
    - name: numReviews
      type: Int!
    - name: rating
      type: Float!
  graphql:
    typeName: MoviesTomatoesCritic
    inputTypeName: MoviesTomatoesCriticInput
  dataConnectorTypeMapping:
    - dataConnectorName: sample_mflix
      dataConnectorObjectType: movies_tomatoes_critic

---
kind: TypePermissions
version: v1
definition:
  typeName: MoviesTomatoesCritic
  permissions:
    - role: admin
      output:
        allowedFields:
          - meter
          - numReviews
          - rating

---
kind: BooleanExpressionType
version: v1
definition:
  name: MoviesTomatoesCriticComparisonExp
  operand:
    object:
      type: MoviesTomatoesCritic
      comparableFields:
        - fieldName: meter
          booleanExpressionType: IntComparisonExp
        - fieldName: numReviews
          booleanExpressionType: IntComparisonExp
        - fieldName: rating
          booleanExpressionType: FloatComparisonExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: MoviesTomatoesCriticComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: MoviesTomatoesCriticAggregateExp
  operand:
    object:
      aggregatedType: MoviesTomatoesCritic
      aggregatableFields:
        - fieldName: meter
          aggregateExpression: IntAggregateExp
        - fieldName: numReviews
          aggregateExpression: IntAggregateExp
        - fieldName: rating
          aggregateExpression: FloatAggregateExp
  count: { enable: true }
  graphql:
    selectTypeName: MoviesTomatoesCriticAggregateExp

---
kind: ObjectType
version: v1
definition:
  name: MoviesTomatoesViewer
  fields:
    - name: meter
      type: Int
    - name: numReviews
      type: Int!
    - name: rating
      type: Float!
  graphql:
    typeName: MoviesTomatoesViewer
    inputTypeName: MoviesTomatoesViewerInput
  dataConnectorTypeMapping:
    - dataConnectorName: sample_mflix
      dataConnectorObjectType: movies_tomatoes_viewer

---
kind: TypePermissions
version: v1
definition:
  typeName: MoviesTomatoesViewer
  permissions:
    - role: admin
      output:
        allowedFields:
          - meter
          - numReviews
          - rating

---
kind: BooleanExpressionType
version: v1
definition:
  name: MoviesTomatoesViewerComparisonExp
  operand:
    object:
      type: MoviesTomatoesViewer
      comparableFields:
        - fieldName: meter
          booleanExpressionType: IntComparisonExp
        - fieldName: numReviews
          booleanExpressionType: IntComparisonExp
        - fieldName: rating
          booleanExpressionType: FloatComparisonExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: MoviesTomatoesViewerComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: MoviesTomatoesViewerAggregateExp
  operand:
    object:
      aggregatedType: MoviesTomatoesViewer
      aggregatableFields:
        - fieldName: meter
          aggregateExpression: IntAggregateExp
        - fieldName: numReviews
          aggregateExpression: IntAggregateExp
        - fieldName: rating
          aggregateExpression: FloatAggregateExp
  count: { enable: true }
  graphql:
    selectTypeName: MoviesTomatoesViewerAggregateExp

---
kind: ObjectType
version: v1
definition:
  name: MoviesTomatoes
  fields:
    - name: boxOffice
      type: String
    - name: consensus
      type: String
    - name: critic
      type: MoviesTomatoesCritic
    - name: dvd
      type: Date
    - name: fresh
      type: Int
    - name: lastUpdated
      type: Date!
    - name: production
      type: String
    - name: rotten
      type: Int
    - name: viewer
      type: MoviesTomatoesViewer!
    - name: website
      type: String
  graphql:
    typeName: MoviesTomatoes
    inputTypeName: MoviesTomatoesInput
  dataConnectorTypeMapping:
    - dataConnectorName: sample_mflix
      dataConnectorObjectType: movies_tomatoes

---
kind: TypePermissions
version: v1
definition:
  typeName: MoviesTomatoes
  permissions:
    - role: admin
      output:
        allowedFields:
          - boxOffice
          - consensus
          - critic
          - dvd
          - fresh
          - lastUpdated
          - production
          - rotten
          - viewer
          - website

---
kind: BooleanExpressionType
version: v1
definition:
  name: MoviesTomatoesComparisonExp
  operand:
    object:
      type: MoviesTomatoes
      comparableFields:
        - fieldName: boxOffice
          booleanExpressionType: StringComparisonExp
        - fieldName: consensus
          booleanExpressionType: StringComparisonExp
        - fieldName: critic
          booleanExpressionType: MoviesTomatoesCriticComparisonExp
        - fieldName: dvd
          booleanExpressionType: DateComparisonExp
        - fieldName: fresh
          booleanExpressionType: IntComparisonExp
        - fieldName: lastUpdated
          booleanExpressionType: DateComparisonExp
        - fieldName: production
          booleanExpressionType: StringComparisonExp
        - fieldName: rotten
          booleanExpressionType: IntComparisonExp
        - fieldName: viewer
          booleanExpressionType: MoviesTomatoesViewerComparisonExp
        - fieldName: website
          booleanExpressionType: StringComparisonExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: MoviesTomatoesComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: MoviesTomatoesAggregateExp
  operand:
    object:
      aggregatedType: MoviesTomatoes
      aggregatableFields:
        - fieldName: critic
          aggregateExpression: MoviesTomatoesCriticAggregateExp
        - fieldName: dvd
          aggregateExpression: DateAggregateExp
        - fieldName: fresh
          aggregateExpression: IntAggregateExp
        - fieldName: lastUpdated
          aggregateExpression: DateAggregateExp
        - fieldName: rotten
          aggregateExpression: IntAggregateExp
        - fieldName: viewer
          aggregateExpression: MoviesTomatoesViewerAggregateExp
  count: { enable: true }
  graphql:
    selectTypeName: MoviesTomatoesAggregateExp

---
kind: ObjectType
version: v1
definition:
  name: Movies
  fields:
    - name: id
      type: ObjectId!
    - name: awards
      type: MoviesAwards!
    - name: cast
      type: "[String!]"
    - name: countries
      type: "[String!]!"
    - name: directors
      type: "[String!]!"
    - name: fullplot
      type: String
    - name: genres
      type: "[String!]!"
    - name: imdb
      type: MoviesImdb!
    - name: languages
      type: "[String!]"
    - name: lastupdated
      type: String!
    - name: metacritic
      type: Int
    - name: numMflixComments
      type: Int
    - name: plot
      type: String
    - name: poster
      type: String
    - name: rated
      type: String
    - name: released
      type: Date
    - name: runtime
      type: Int
    - name: title
      type: String!
    - name: tomatoes
      type: MoviesTomatoes
    - name: type
      type: String!
    - name: writers
      type: "[String!]"
    - name: year
      type: Int!
  graphql:
    typeName: Movies
    inputTypeName: MoviesInput
  dataConnectorTypeMapping:
    - dataConnectorName: sample_mflix
      dataConnectorObjectType: movies
      fieldMapping:
        id:
          column:
            name: _id
        awards:
          column:
            name: awards
        cast:
          column:
            name: cast
        countries:
          column:
            name: countries
        directors:
          column:
            name: directors
        fullplot:
          column:
            name: fullplot
        genres:
          column:
            name: genres
        imdb:
          column:
            name: imdb
        languages:
          column:
            name: languages
        lastupdated:
          column:
            name: lastupdated
        metacritic:
          column:
            name: metacritic
        numMflixComments:
          column:
            name: num_mflix_comments
        plot:
          column:
            name: plot
        poster:
          column:
            name: poster
        rated:
          column:
            name: rated
        released:
          column:
            name: released
        runtime:
          column:
            name: runtime
        title:
          column:
            name: title
        tomatoes:
          column:
            name: tomatoes
        type:
          column:
            name: type
        writers:
          column:
            name: writers
        year:
          column:
            name: year

---
kind: TypePermissions
version: v1
definition:
  typeName: Movies
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - awards
          - cast
          - countries
          - directors
          - fullplot
          - genres
          - imdb
          - languages
          - lastupdated
          - metacritic
          - numMflixComments
          - plot
          - poster
          - rated
          - released
          - runtime
          - title
          - tomatoes
          - type
          - writers
          - year

---
kind: BooleanExpressionType
version: v1
definition:
  name: MoviesComparisonExp
  operand:
    object:
      type: Movies
      comparableFields:
        - fieldName: id
          booleanExpressionType: ObjectIdComparisonExp
        - fieldName: awards
          booleanExpressionType: MoviesAwardsComparisonExp
        - fieldName: cast
          booleanExpressionType: StringComparisonExp
        - fieldName: fullplot
          booleanExpressionType: StringComparisonExp
        - fieldName: genres
          booleanExpressionType: StringComparisonExp
        - fieldName: imdb
          booleanExpressionType: MoviesImdbComparisonExp
        - fieldName: lastupdated
          booleanExpressionType: StringComparisonExp
        - fieldName: metacritic
          booleanExpressionType: IntComparisonExp
        - fieldName: numMflixComments
          booleanExpressionType: IntComparisonExp
        - fieldName: plot
          booleanExpressionType: StringComparisonExp
        - fieldName: poster
          booleanExpressionType: StringComparisonExp
        - fieldName: rated
          booleanExpressionType: StringComparisonExp
        - fieldName: released
          booleanExpressionType: DateComparisonExp
        - fieldName: runtime
          booleanExpressionType: IntComparisonExp
        - fieldName: title
          booleanExpressionType: StringComparisonExp
        - fieldName: tomatoes
          booleanExpressionType: MoviesTomatoesComparisonExp
        - fieldName: type
          booleanExpressionType: StringComparisonExp
        - fieldName: year
          booleanExpressionType: IntComparisonExp
      comparableRelationships:
        - relationshipName: comments
          booleanExpressionType: CommentsComparisonExp
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: MoviesComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: MoviesAggregateExp
  operand:
    object:
      aggregatedType: Movies
      aggregatableFields:
        # TODO: This requires updating the connector to support nested field
        # aggregates
        # - fieldName: awards
        #   aggregateExpression: MoviesAwardsAggregateExp
        # - fieldName: imdb
        #   aggregateExpression: MoviesImdbAggregateExp
        - fieldName: metacritic
          aggregateExpression: IntAggregateExp
        - fieldName: numMflixComments
          aggregateExpression: IntAggregateExp
        - fieldName: released
          aggregateExpression: DateAggregateExp
        - fieldName: runtime
          aggregateExpression: IntAggregateExp
        # - fieldName: tomatoes
        #   aggregateExpression: MoviesTomatoesAggregateExp
        - fieldName: year
          aggregateExpression: IntAggregateExp
  count: { enable: true }
  graphql:
    selectTypeName: MoviesAggregateExp

---
kind: Model
version: v1
definition:
  name: Movies
  objectType: Movies
  source:
    dataConnectorName: sample_mflix
    collection: movies
  aggregateExpression: MoviesAggregateExp
  filterExpressionType: MoviesComparisonExp
  orderableFields:
    - fieldName: id
      orderByDirections:
        enableAll: true
    - fieldName: awards
      orderByDirections:
        enableAll: true
    - fieldName: cast
      orderByDirections:
        enableAll: true
    - fieldName: countries
      orderByDirections:
        enableAll: true
    - fieldName: directors
      orderByDirections:
        enableAll: true
    - fieldName: fullplot
      orderByDirections:
        enableAll: true
    - fieldName: genres
      orderByDirections:
        enableAll: true
    - fieldName: imdb
      orderByDirections:
        enableAll: true
    - fieldName: languages
      orderByDirections:
        enableAll: true
    - fieldName: lastupdated
      orderByDirections:
        enableAll: true
    - fieldName: metacritic
      orderByDirections:
        enableAll: true
    - fieldName: numMflixComments
      orderByDirections:
        enableAll: true
    - fieldName: plot
      orderByDirections:
        enableAll: true
    - fieldName: poster
      orderByDirections:
        enableAll: true
    - fieldName: rated
      orderByDirections:
        enableAll: true
    - fieldName: released
      orderByDirections:
        enableAll: true
    - fieldName: runtime
      orderByDirections:
        enableAll: true
    - fieldName: title
      orderByDirections:
        enableAll: true
    - fieldName: tomatoes
      orderByDirections:
        enableAll: true
    - fieldName: type
      orderByDirections:
        enableAll: true
    - fieldName: writers
      orderByDirections:
        enableAll: true
    - fieldName: year
      orderByDirections:
        enableAll: true
  graphql:
    aggregate:
      queryRootField: moviesAggregate
    filterInputTypeName: MoviesFilterInput
    selectMany:
      queryRootField: movies
    selectUniques:
      - queryRootField: moviesById
        uniqueIdentifier:
          - id
    orderByExpressionType: MoviesOrderBy

---
kind: ModelPermissions
version: v1
definition:
  modelName: Movies
  permissions:
    - role: admin
      select:
        filter: null
