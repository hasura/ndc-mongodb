---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: chinook
  dataConnectorScalarType: Double
  representation: Float

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: sample_mflix
  dataConnectorScalarType: Double
  representation: Float

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: test_cases
  dataConnectorScalarType: Double
  representation: Float

---
kind: BooleanExpressionType
version: v1
definition:
  name: FloatComparisonExp
  operand:
    scalar:
      type: Float
      comparisonOperators:
        - name: _eq
          argumentType: Float
        - name: _neq
          argumentType: Float
        - name: _in
          argumentType: "[Float!]!"
        - name: _nin
          argumentType: "[Float!]!"
        - name: _gt
          argumentType: Float
        - name: _gte
          argumentType: Float
        - name: _lt
          argumentType: Float
        - name: _lte
          argumentType: Float
      dataConnectorOperatorMapping:
        - dataConnectorName: chinook
          dataConnectorScalarType: Double
          operatorMapping:
            _eq: _eq
            _neq: _neq
            _in: _in
            _nin: _nin
            _gt: _gt
            _gte: _gte
            _lt: _lt
            _lte: _lte
        - dataConnectorName: sample_mflix
          dataConnectorScalarType: Double
          operatorMapping:
            _eq: _eq
            _neq: _neq
            _in: _in
            _nin: _nin
            _gt: _gt
            _gte: _gte
            _lt: _lt
            _lte: _lte
        - dataConnectorName: test_cases
          dataConnectorScalarType: Double
          operatorMapping:
            _eq: _eq
            _neq: _neq
            _in: _in
            _nin: _nin
            _gt: _gt
            _gte: _gte
            _lt: _lt
            _lte: _lte
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: DoubleComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: FloatAggregateExp
  operand:
    scalar:
      aggregatedType: Float
      aggregationFunctions:
        - name: _avg
          returnType: Float
        - name: _max
          returnType: Float
        - name: _min
          returnType: Float
        - name: _sum
          returnType: Float
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: chinook
          dataConnectorScalarType: Double
          functionMapping:
            _avg: { name: avg }
            _max: { name: max }
            _min: { name: min }
            _sum: { name: sum }
        - dataConnectorName: sample_mflix
          dataConnectorScalarType: Double
          functionMapping:
            _avg: { name: avg }
            _max: { name: max }
            _min: { name: min }
            _sum: { name: sum }
        - dataConnectorName: test_cases
          dataConnectorScalarType: Double
          functionMapping:
            _avg: { name: avg }
            _max: { name: max }
            _min: { name: min }
            _sum: { name: sum }
  count: { enable: true }
  countDistinct: { enable: true }
  graphql:
    selectTypeName: FloatAggregateExp
