---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: chinook
  dataConnectorScalarType: Int
  representation: Int

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: sample_mflix
  dataConnectorScalarType: Int
  representation: Int

---
kind: BooleanExpressionType
version: v1
definition:
  name: IntComparisonExp
  operand:
    scalar:
      type: Int
      comparisonOperators:
        - name: _eq
          argumentType: Int
        - name: _neq
          argumentType: Int
        - name: _gt
          argumentType: Int
        - name: _gte
          argumentType: Int
        - name: _lt
          argumentType: Int
        - name: _lte
          argumentType: Int
      dataConnectorOperatorMapping:
        - dataConnectorName: chinook
          dataConnectorScalarType: Int
          operatorMapping:
            _eq: _eq
            _neq: _neq
            _gt: _gt
            _gte: _gte
            _lt: _lt
            _lte: _lte
        - dataConnectorName: sample_mflix
          dataConnectorScalarType: Int
          operatorMapping:
            _eq: _eq
            _neq: _neq
            _gt: _gt
            _gte: _gte
            _lt: _lt
            _lte: _lte
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: IntComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: IntAggregateExp
  operand:
    scalar:
      aggregatedType: Int
      aggregationFunctions:
        - name: _avg
          returnType: Int
        - name: _max
          returnType: Int
        - name: _min
          returnType: Int
        - name: _sum
          returnType: Int
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: chinook
          dataConnectorScalarType: Int
          functionMapping:
            _avg: { name: avg }
            _max: { name: max }
            _min: { name: min }
            _sum: { name: sum }
        - dataConnectorName: sample_mflix
          dataConnectorScalarType: Int
          functionMapping:
            _avg: { name: avg }
            _max: { name: max }
            _min: { name: min }
            _sum: { name: sum }
  count: { enable: true }
  countDistinct: { enable: true }
  graphql:
    selectTypeName: IntAggregateExp
